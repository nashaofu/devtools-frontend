{"version":3,"file":"DeprecationIssue.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/DeprecationIssue.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAK7B,OAAO,EAAC,KAAK,EAAE,aAAa,EAAE,SAAS,EAAC,MAAM,YAAY,CAAC;AAG3D,MAAM,OAAO,gBAAiB,SAAQ,KAAK;IACzC,aAAa,CAA0C;IAEvD,YAAY,YAAqD,EAAE,WAAwC;QACzG,MAAM,SAAS,GAAG;;YAEhB,YAAY,CAAC,eAAe;SAC7B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACb,KAAK,CAAC,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,kBAAkB,EAAC,EAAE,WAAW,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAED,WAAW;QACT,OAAO,aAAa,CAAC,KAAK,CAAC;IAC7B,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,cAAc;QACZ,OAAO;YACL,IAAI,EAAE,gBAAgB;YACtB,aAAa,EAAE,IAAI,GAAG,CAAC;gBACrB,mEAAmE;gBACnE,gHAAgH;gBAChH,CAAC,qBAAqB,EAAE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;aAC5D,CAAC;YACF,KAAK,EAAE,EAAE;SACV,CAAC;IACJ,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE;YACzC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;SAChD;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5C,CAAC;IAED,OAAO;QACL,OAAO,SAAS,CAAC,cAAc,CAAC;IAClC,CAAC;IAED,MAAM,CAAC,kBAAkB,CAAC,WAAwC,EAAE,cAA8C;QAEhH,MAAM,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,uBAAuB,CAAC;QAC/D,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;YAC5D,OAAO,EAAE,CAAC;SACX;QACD,OAAO,CAAC,IAAI,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;CACF","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {MarkdownIssueDescription} from './MarkdownIssueDescription.js';\n\nexport class DeprecationIssue extends Issue {\n  #issueDetails: Protocol.Audits.DeprecationIssueDetails;\n\n  constructor(issueDetails: Protocol.Audits.DeprecationIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    const issueCode = [\n      Protocol.Audits.InspectorIssueCode.DeprecationIssue,\n      issueDetails.deprecationType,\n    ].join('::');\n    super({code: issueCode, umaCode: 'DeprecationIssue'}, issuesModel);\n    this.#issueDetails = issueDetails;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.Other;\n  }\n\n  details(): Protocol.Audits.DeprecationIssueDetails {\n    return this.#issueDetails;\n  }\n\n  getDescription(): MarkdownIssueDescription|null {\n    return {\n      file: 'deprecation.md',\n      substitutions: new Map([\n        // TODO(crbug.com/1264960): Re-work format to add i18n support per:\n        // https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/public/devtools_protocol/README.md\n        ['PLACEHOLDER_message', String(this.#issueDetails.message)],\n      ]),\n      links: [],\n    };\n  }\n\n  sources(): Iterable<Protocol.Audits.SourceCodeLocation> {\n    if (this.#issueDetails.sourceCodeLocation) {\n      return [this.#issueDetails.sourceCodeLocation];\n    }\n    return [];\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.#issueDetails);\n  }\n\n  getKind(): IssueKind {\n    return IssueKind.BreakingChange;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      DeprecationIssue[] {\n    const details = inspectorIssue.details.deprecationIssueDetails;\n    if (!details) {\n      console.warn('Deprecation issue without details received.');\n      return [];\n    }\n    return [new DeprecationIssue(details, issuesModel)];\n  }\n}\n"]}